// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Pb.Profile.Service.Models;
//
//    var hotel = Hotel.FromJson(jsonString);

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Profile;

namespace Pb.Profile.Service.Models;

public interface IHotelLoader
{
    Hotel[] Hotels { get; }
}


public class HotelLoader : IHotelLoader
{
    public Hotel[] Hotels { get; }

    public HotelLoader(string filePath)
    {
        var jsonString = File.ReadAllText(filePath);
        Hotels = FromJson(jsonString);
    }
    
    private static Hotel[] FromJson(string json)
    {
        return JsonConvert.DeserializeObject<Hotel[]>(json, Pb.Profile.Service.Models.Converter.Settings);
    }
}


public static class Serialize
{
    public static string ToJson(this Hotel[] self) => JsonConvert.SerializeObject(self, Pb.Profile.Service.Models.Converter.Settings);
}

internal static class Converter
{
    public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
    {
        MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
        DateParseHandling = DateParseHandling.None,
        Converters =
        {
            new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
        },
    };
}

